// https://chatgpt.com/c/68600485-24bc-8012-b755-348f6c0eb562

pipeline {
    agent none

    // Colorize build output.
    options {
        ansiColor('xterm')
    }

    stages {
        stage('Matrix Build') {

            // Test against multiple Node.js versions.
            matrix {
                axes {
                    axis {
                        name 'NODE_VERSION'
                        values 'Node 20.x', 'Node 22.x'
                    }
                }

                agent any

                tools {
                    nodejs "${NODE_VERSION}"
                }

                stages {

                    // 1. Install dependencies.
                    stage('Install') {
                        steps {
                            dir('app') {
                                sh 'npm install'
                            }
                        }
                    }

                    // 2. Run the tests.
                    stage('Test') {
                        steps {
                            script {

                                // Run the linter and unit tests in parallel.
                                parallel(
                                    "Lint": {
                                        dir('app') {
                                            sh 'npm run lint'
                                        }
                                    },
                                    
                                    "Unit Tests": {
                                        dir('app') {
                                            sh 'npm test'
                                        }
                                    }
                                )
                            }
                        }
                    }

                    // 3. Run a build.
                    stage('Build') {
                        steps {
                            dir('app') {
                                sh 'npm run build'
                            }
                        }
                    }
                }

                post {
                    always {

                        // Upload the test results.
                        publishHTML(target: [
                            reportDir: 'app/coverage',
                            reportFiles: 'index.html',
                            reportName: "Code coverage (${NODE_VERSION})",
                            allowMissing: true,
                            alwaysLinkToLastBuild: true,
                            keepAll: false
                        ])
                    }
                }
            }
        }
    }
}
